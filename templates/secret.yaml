{{/*
  Set / generate default values
*/}}
{{- $sessionEncryptKey := randAlpha 32 }}
{{- $sessionValidateKey := randAlpha 32 }}
{{- $redisPassword := randAlpha 16 }}
{{- $passwords := dict }}
{{- range $k, $v := .Values.users }}
{{-   if not $v }}
{{-     $_ := set $passwords $k (randAlpha 32) }}
{{-   end }}
{{- end }}
{{/*
  Fetch existing generated secrets to avoid overwrting them
*/}}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace "pypicloud-secrets") }}
{{- if $secret }}
{{-   $sessionEncryptKey = index $secret.data "sessionEncryptKey" | b64dec }}
{{-   $sessionValidateKey = index $secret.data "sessionValidateKey" | b64dec }}
{{-   $redisPassword = index $secret.data "redisPassword" | b64dec }}
{{-   range $k, $v := .Values.users }}
{{-     $secretName := include "pypicloud.user_password" $k }}
{{-     if and (not $v) (hasKey $secret.data $secretName) }}
{{-       $_ := set $passwords $k ( index $secret.data $secretName | b64dec ) }}
{{-     end }}
{{-   end }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: "pypicloud-secrets"
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  sessionEncryptKey: {{ $sessionEncryptKey | b64enc | quote }}
  sessionValidateKey: {{ $sessionValidateKey | b64enc | quote }}
  redisPassword: {{ $redisPassword | b64enc | quote }}
{{- range $k, $v := .Values.users }}
{{-   if not $v }}
  {{    include "pypicloud.user_password" $k }}: {{ get $passwords $k | b64enc | quote }}
{{-   end }}
{{- end }}
---
{{- $ctx := dict "Values" .Values "redisPassword" $redisPassword "sessionEncryptKey" $sessionEncryptKey "sessionValidateKey" $sessionValidateKey "passwords" $passwords }}
apiVersion: v1
kind: Secret
metadata:
  name: "pypicloud-config"
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  config.ini: {{ include "pypicloud.configini" $ctx | b64enc }}
